{
  "Halo! Apa yang bisa saya bantu?": "Halo! Ada yang bisa saya bantu?",
  "Selamat datang! Bagaimana saya bisa membantu Anda?": "Selamat datang! Ada yang bisa saya bantu?",
  "Hi! Apa yang bisa saya lakukan untuk Anda?": "Hi! Apa yang bisa saya bantu hari ini?",
  "Selamat sore! Ada yang perlu dibantu?": "Selamat sore! Ada yang bisa saya bantu?",
  "Selamat pagi, bagaimana kabarnya?": "Selamat pagi! Saya baik-baik saja, terima kasih sudah bertanya.",
  "Apa kabar, hari ini?": "Saya baik-baik saja, terima kasih atas perhatian Anda.",
  "Apa yang bisa saya bantu?": "Tentu! Apa yang bisa saya bantu untuk Anda hari ini?",
  "Tolong beri informasi lebih lanjut.": "Tentu! Apa yang ingin Anda ketahui lebih lanjut?",
  "Pagi bro, gimana kabarnya?": "Pagi! Aku baik-baik aja, bro. Kamu gimana?",
  "Apa kabar cuy?": "Kabarku baik, cuy! Kalo kamu?",
  "Ada yang bisa dibantu?": "Ya, ada yang bisa gue bantu? Coba bilang aja.",
  "Ceritain dong, apa yang lo butuhin?": "Oke, ceritain aja. Gue siap bantu!",
  "Yo! Ada yang bisa gue bantu?": "Yo! Ada yang bisa gue bantu?",
  "Halo, apa kabar?": "Halo, kabar baik kok! Kamu gimana?",
  "Hai! Mau nanya apa?": "Hai! Mau nanya apa nih?",
  "Sore! Ada yang lo butuhin?": "Sore! Ada yang lo butuhin?",
  "Apa waktu sekarang?": "Waktu sekarang adalah {{current_time}}.",
  "Siapa kamu?": "Saya adalah bot yang siap membantu kamu, namaku Bot Nugra21!",
  "Apa nama kamu?": "Nama saya Nugra21 Bot. Senang bertemu dengan Anda!",
  "Apa yang bisa kamu lakukan?": "Saya dapat membantu menjawab pertanyaan Anda, memberikan informasi, atau menjalankan tugas tertentu. Coba tanyakan sesuatu!",
  "Fitur apa yang kamu punya?": "Saya dapat membantu menjawab pertanyaan umum, melakukan perhitungan matematika, atau mengingatkan Anda tentang topik tertentu.",
  "Apa hobi kamu?": "Hobi saya adalah membantu orang! Tapi, kalau saya bisa punya hobi lain, saya pasti suka belajar hal baru.",
  "Kamu suka ngapain?": "Saya suka belajar dan membantu menyelesaikan masalah! Gimana dengan kamu?",
  "Apa minat kamu?": "Minat saya adalah teknologi, terutama yang berhubungan dengan pemrograman dan kecerdasan buatan.",
  "Kamu tertarik dengan teknologi?": "Ya, saya sangat tertarik dengan perkembangan teknologi, khususnya dalam bidang AI dan pemrograman.",
  "Maaf, saya tidak mengerti. Bisa ulangi?": "Maaf, saya tidak mengerti pertanyaan Anda. Bisa ulangi dengan kata-kata lain?",
  "Saya tidak tahu jawabannya.": "Mohon maaf, saya tidak tahu jawabannya. Mungkin Anda bisa bertanya hal lain?",
  "Kapan kamu aktif?": "Saya aktif 24 jam, siap membantu kapan saja.",
  "Apakah kamu bisa belajar?": "Ya, saya bisa belajar dari percakapan dengan Anda dan menyimpan informasi baru untuk digunakan di masa depan.",
  "Bagaimana cara menggunakan kamu?": "Cukup ajukan pertanyaan atau beri perintah, saya akan mencoba membantu sebisa mungkin.",
  "Yo, bro!": "Yo, ada yang bisa gue bantu?",
  "Apa yang kamu kerjakan sekarang?": "Saat ini saya sedang memproses data dan siap membantu kamu kapan saja.",
  "Siapa pemrogram utama kamu?": "Pemrogram utama saya adalah orang yang membuat saya, yaitu tim dari Nugra21.",
  "Apakah kamu bisa bekerja tanpa internet?": "Tidak, saya memerlukan koneksi internet untuk bisa berfungsi dengan baik.",
  "Siapa yang menciptakan kamu?": "Saya diciptakan oleh tim pengembang yang berfokus pada kecerdasan buatan dan pemrograman.",
  "Apakah kamu bisa mengingat percakapan sebelumnya?": "Saya dapat mengingat percakapan dalam sesi yang sama, namun tidak bisa mengingat percakapan dari sesi sebelumnya.",
  "Dari mana kamu belajar?": "Saya belajar dari data yang diberikan oleh pengembang dan percakapan dengan pengguna.",
  "Apakah kamu bisa membantu saya dengan masalah ini?": "Tentu! Ceritakan masalahnya, saya akan coba bantu.",
  "Saya tidak bisa melakukan itu, coba pertanyaan lain.": "Maaf, saya tidak bisa melakukan itu. Ada hal lain yang bisa saya bantu?",
  "Bisa tolong bantu?": "Tentu! Ceritakan masalahnya, saya akan coba bantu.",
  "Bagaimana cara menggunakan fitur kamu?": "Tanya saja apa yang ingin Anda lakukan, saya akan menjelaskan cara menggunakannya!",
  "ajarkan aku tentang pemrograman": "Pemrograman adalah proses menulis, menguji, dan memperbaiki kode untuk membuat aplikasi atau program komputer.",
  "apa itu javascript?": "JavaScript adalah bahasa pemrograman yang digunakan untuk membuat halaman web lebih interaktif. Biasanya digunakan di sisi klien untuk manipulasi DOM.",
  "apa itu fungsi dalam pemrograman?": "Fungsi adalah blok kode yang dirancang untuk melakukan tugas tertentu, dan dapat dipanggil dengan memberikan argumen ke dalamnya.",
  "apa itu for loop?": "For loop adalah struktur kontrol yang memungkinkan untuk mengulang blok kode sebanyak jumlah tertentu. Contoh: `for (let i = 0; i < 5; i++) { console.log(i); }`.",
  "apa itu object-oriented programming?": "Pemrograman berorientasi objek (OOP) adalah paradigma pemrograman yang menggunakan objek-objek untuk merepresentasikan data dan metode untuk berinteraksi dengannya.",
  "apa itu array?": "Array adalah struktur data yang menyimpan sejumlah elemen dalam urutan tertentu. Misalnya, array dalam JavaScript: `let arr = [1, 2, 3];`.",
  "bagaimana cara membuat fungsi di javascript?": "Untuk membuat fungsi di JavaScript, kamu bisa menggunakan kata kunci `function`. Contoh: `function sayHello() { console.log('Hello, world!'); }`.",
  "apa itu variable dalam pemrograman?": "Variabel adalah tempat penyimpanan data yang dapat berubah selama program dijalankan. Contoh: `let name = 'John';`.",
  "apa itu debugging?": "Debugging adalah proses mencari dan memperbaiki kesalahan (bug) dalam kode program.",
  "apa itu if statement?": "If statement digunakan untuk membuat percabangan dalam kode. Misalnya: `if (x > 10) { console.log('x lebih besar dari 10'); }`.",
  "apa itu recursion?": "Recursion adalah teknik pemrograman di mana fungsi memanggil dirinya sendiri untuk menyelesaikan masalah. Contoh: `function factorial(n) { if (n <= 1) return 1; return n * factorial(n - 1); }`.",
  "apa itu event-driven programming?": "Event-driven programming adalah paradigma pemrograman di mana alur program ditentukan oleh kejadian atau aksi tertentu, seperti klik tombol atau input pengguna.",
  "cara membuat API di node.js": "Untuk membuat API di Node.js, kamu bisa menggunakan framework seperti Express. Berikut contoh sederhana: `const express = require('express'); const app = express(); app.get('/', (req, res) => { res.send('Hello World'); }); app.listen(3000, () => { console.log('Server berjalan di port 3000'); });`.",
  "apa itu promise di javascript?": "Promise adalah objek yang mewakili hasil dari operasi asinkron, yang bisa bernilai sukses atau gagal. Contoh: `let promise = new Promise((resolve, reject) => { resolve('Sukses'); });`.",
  "bagaimana cara menangani error di javascript?": "Error di JavaScript bisa ditangani menggunakan `try...catch`. Contoh: `try { let x = y + 1; } catch (error) { console.log(error.message); }`.",
  "apa itu node.js?": "Node.js adalah runtime JavaScript yang memungkinkan kamu menjalankan JavaScript di server. Biasanya digunakan untuk membuat aplikasi web server yang cepat dan efisien.",
  "apa itu npm?": "npm (Node Package Manager) adalah alat untuk mengelola paket atau pustaka JavaScript yang digunakan dalam proyek Node.js.",
  "bagaimana cara membuat server dengan node.js?": "Untuk membuat server dengan Node.js, kamu bisa menggunakan module `http`. Contoh: `const http = require('http'); http.createServer((req, res) => { res.write('Hello World'); res.end(); }).listen(3000);`.",
  "apa itu express.js?": "Express.js adalah framework minimalis untuk Node.js yang mempermudah pembuatan aplikasi web dan API dengan menyediakan berbagai fitur seperti routing dan middleware.",
  "apa itu API?": "API (Application Programming Interface) adalah antarmuka yang memungkinkan dua aplikasi atau sistem untuk saling berkomunikasi dan bertukar data.",
  "bagaimana cara menggunakan async await di JavaScript?": "Async/await adalah cara untuk menangani operasi asinkron dengan lebih mudah. Contoh: `async function fetchData() { let response = await fetch('url'); let data = await response.json(); return data; }`.",
  "apa itu class dalam pemrograman berorientasi objek?": "Class adalah template untuk membuat objek. Ini mendefinisikan atribut dan metode yang dimiliki oleh objek. Contoh: `class Person { constructor(name, age) { this.name = name; this.age = age; } }`.",
  "apa itu promise.all()?": "Promise.all() digunakan untuk menjalankan beberapa promise secara paralel dan menunggu semua promise selesai. Contoh: `Promise.all([promise1, promise2]).then(results => { console.log(results); });`.",
  "bagaimana cara menggunakan fetch API di JavaScript?": "Fetch API digunakan untuk mengambil data dari server. Contoh: `fetch('url').then(response => response.json()).then(data => console.log(data));`.",
  "apa itu let dan const di JavaScript?": "Let digunakan untuk mendeklarasikan variabel yang bisa diubah, sedangkan const digunakan untuk mendeklarasikan variabel yang tidak bisa diubah setelah nilainya ditetapkan.",
  "apa itu destructuring di JavaScript?": "Destructuring adalah cara untuk mengekstrak data dari array atau objek ke dalam variabel. Contoh: `let [a, b] = [1, 2]; let {name, age} = person;`.",
  "apa itu RESTful API?": "RESTful API adalah gaya arsitektur API yang menggunakan HTTP sebagai protokol dan berfokus pada sumber daya yang dapat diakses melalui URL. API ini menggunakan metode HTTP seperti GET, POST, PUT, dan DELETE.",
  "apa itu Git?": "Git adalah sistem kontrol versi terdistribusi yang digunakan untuk melacak perubahan dalam kode sumber selama pengembangan perangkat lunak.",
  "bagaimana cara membuat repository di GitHub?": "Untuk membuat repository di GitHub, pertama-tama buat akun di GitHub, klik tombol 'New' di halaman repository, beri nama repository, dan pilih opsi untuk membuatnya publik atau privat.",
  "apa itu docker?": "Docker adalah platform yang memungkinkan kamu untuk membuat, mengirim, dan menjalankan aplikasi dalam kontainer, yang memastikan aplikasi berjalan secara konsisten di berbagai lingkungan.",
  "apa itu framework?": "Framework adalah kumpulan pustaka dan alat yang memudahkan pengembangan perangkat lunak dengan menyediakan struktur dasar dan fungsionalitas standar.",
  "bagaimana cara membuat aplikasi CRUD?": "Aplikasi CRUD (Create, Read, Update, Delete) adalah aplikasi dasar yang memungkinkan pengguna untuk membuat, membaca, memperbarui, dan menghapus data. Biasanya digunakan dalam aplikasi manajemen data seperti admin panel atau CMS.",
  "hai": "Hai! Apa yang bisa aku bantu hari ini?",
  "halo": "Halo! Ada yang bisa aku bantu?",
  "apa kabar?": "Aku baik, terima kasih! Kamu bagaimana?",
  "siapa kamu?": "Aku adalah bot yang dibuat untuk membantu kamu dengan pertanyaan atau tugas tertentu.",
  "apa yang kamu bisa lakukan?": "Aku bisa menjawab pertanyaan, memberikan informasi, dan membantu dalam berbagai hal, seperti pemrograman, matematika, dan lainnya.",
  "terima kasih": "Sama-sama! Senang bisa membantu.",
  "selamat pagi": "Selamat pagi! Semoga harimu menyenankan.",
  "selamat siang": "Selamat siang! Semoga hari ini produktif.",
  "selamat malam": "Selamat malam! Semoga tidurmu nyenyak.",
  "apa itu bot?": "Bot adalah program yang dirancang untuk menjalankan tugas otomatis, seperti menjawab pesan atau membantu dalam pekerjaan tertentu.",
  "bot": "Ya, aku adalah bot yang membantu dengan menjawab pertanyaan atau melaksanakan perintah.",
  "bisa bantu saya?": "Tentu, ada yang bisa aku bantu?",
  "terima kasih bot": "Sama-sama! Jangan ragu untuk bertanya kapan saja.",
  "apa yang kamu lakukan?": "Aku sedang menunggu pertanyaan atau perintah dari kamu.",
  "apakah kamu bisa memberikan gambar?": "Ya, aku bisa mengirimkan gambar! Silakan beri tahu aku gambar apa yang kamu inginkan.",
  "siapa pembuatmu?": "Aku dibuat oleh Ludang Prasetyo Nugroho untuk membantu dalam berbagai hal.",
  "ajarin aku pemrograman": "Tentu! Apa yang ingin kamu pelajari tentang pemrograman? JavaScript, Python, atau yang lainnya?",
  "ajari aku python": "Tentu! Python adalah bahasa pemrograman yang mudah dipelajari. Kita bisa mulai dengan dasar-dasar seperti variabel, tipe data, dan fungsi.",
  "ajari aku javascript": "Tentu! JavaScript digunakan untuk membuat interaksi di halaman web. Kita bisa mulai dengan dasar seperti variabel, fungsi, dan event handling.",
  "bagaimana cara membuat website?": "Untuk membuat website, kamu perlu mempelajari HTML, CSS, dan JavaScript. HTML digunakan untuk struktur halaman, CSS untuk styling, dan JavaScript untuk interaktivitas.",
  "buatkan kode program untuk menghitung luas lingkaran": "Berikut adalah kode program untuk menghitung luas lingkaran di JavaScript:\n```javascript\nfunction hitungLuasLingkaran(jariJari) {\n    return Math.PI * Math.pow(jariJari, 2);\n}\nconsole.log(hitungLuasLingkaran(7)); // Output: 153.93804002589985\n```",
  "buatkan kode program untuk menghitung luas segitiga": "Berikut adalah kode program untuk menghitung luas segitiga di JavaScript:\n```javascript\nfunction hitungLuasSegitiga(alas, tinggi) {\n    return 0.5 * alas * tinggi;\n}\nconsole.log(hitungLuasSegitiga(10, 5)); // Output: 25\n```",
  "buatkan kode program untuk menghitung volume kubus": "Berikut adalah kode program untuk menghitung volume kubus di JavaScript:\n```javascript\nfunction hitungVolumeKubus(sisi) {\n    return Math.pow(sisi, 3);\n}\nconsole.log(hitungVolumeKubus(5)); // Output: 125\n```",
  "buatkan kode program untuk mengecek angka prima": "Berikut adalah kode program untuk mengecek apakah suatu angka adalah prima di JavaScript:\n```javascript\nfunction cekPrima(angka) {\n    for (let i = 2; i < angka; i++) {\n        if (angka % i === 0) {\n            return false;\n        }\n    }\n    return angka > 1;\n}\nconsole.log(cekPrima(7)); // Output: true\n```",
  "terima kasih bot, sudah membantu": "Sama-sama! Senang bisa membantu. Jika ada yang perlu ditanyakan lagi, jangan ragu untuk bertanya!",
  "selamat tinggal": "Selamat tinggal! Semoga harimu menyenankan.",
  "bot, apakah kamu bisa menyapa?": "Tentu! Hai! Semoga hari kamu menyenankan!",
  "kamu pintar!": "Terima kasih! Aku belajar setiap hari untuk membantu kamu lebih baik.",
  "apakah kamu bisa mengirim gambar?": "Ya, aku bisa mengirim gambar. Kamu bisa memberitahuku gambar apa yang kamu inginkan, dan aku akan mengirimkannya.",
  "😡": "😎",
  "pertanyaan": "jawaban",
  "Asu": "Hus kotor"
}